<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Report', 'main');

/**
 * BaseReport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property text $name
 * @property text $baseModel
 * @property boolean $unsaved
 * @property date $lastExec
 * @property text $format
 * @property Doctrine_Collection $ReportColumn
 * @property Doctrine_Collection $ReportJoin
 * @property Schedule $Schedule
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReport extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('report');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('name', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('base_model as baseModel', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('unsaved', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('last_exec as lastExec', 'date', 25, array(
             'type' => 'date',
             'notnull' => false,
             'length' => '25',
             ));
        $this->hasColumn('format', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ReportColumn', array(
             'local' => 'id',
             'foreign' => 'reportId'));

        $this->hasMany('ReportJoin', array(
             'local' => 'id',
             'foreign' => 'reportId'));

        $this->hasOne('Schedule', array(
             'local' => 'id',
             'foreign' => 'reportId'));

        $softdelete0 = new Doctrine_Template_SoftDelete();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}